1.12.9  2012-01-05

  * ThreadPoolFactories are named by default
  * Offer: ensure ObjectOrder is independent of Object#hashCode
  * new package: util-zk: asynchronous bindings to ZooKeeper

1.12.7  2011-12-02

  * Future: temporarily disabling default usage of the AsmTracer

1.12.6  2011-12-01

  * Future: all helper methods now have Java-friendly equivalents
  that take Lists.

1.12.5  2011-11-29

  * Config: recompile configs based on hash instead of timestamp, add
  memoization
  * Timer: make JavaTimer more resilient, log errors
  * FuturePool: Fixed race condition in FuturePool where work that was
  cancelled would not clean up after itself
  * Function: Add ExceptionalFunction type to allow Java to throw
  checked exceptions.
  * Futures: trace dispatch "stack", supplying it as a stack trace for
  exceptions, implement "transform", "transformedBy" to allow for a
  more imperative control flow when used from Java.
  * Monitors: composable widgets for handling exceptions

1.12.4  2011-11-09

 * Files.delete has to follow symlinks because jdk6 support
 for symlinks is weaksauce
 * properly handle cancellation in FuturePool
 * Locals: ensure ``Local'' is fully initialized before registering

1.12.3  2011-11-08

  * add some docs to Offer, Time
  * util.io.Files: file utilities, documentation for TempFile
  * Offer/Broker: explicit return types for Java compat.

1.12.2  2011-10-28

  * Json thrift deserializer
  * Finagle: count pending timeouts
  * Fix eval precompile bug

1.12.0  2011-10-21

  * util.Config.Specified now delays evaluation of specified value, to
  ensure evaluation happens in correct dependency order, rather than
  in class-hierarchy order.  This change is mostly source compatible,
  unless you have directly used the Specified class.

1.11.9  2011-10-14

  * ivar/future: provide "TCE", per-thread scheduling, and
  promise squashing
  * logger: restore original logging level after modifying them
  * u64: fix
  * filehandler: thread-visibility
  * eval: fix mtime invalidation
  * base64 encoder: make it threadsafe

1.11.8  2011-10-04
  
  * Back out TCE for ivar/futures. This introduced a space
  leak and will be fixed momentarily.
  * FuturePool: Catch any exception thrown by executor.submit()
  and return as a Future.exception

1.11.7  2011-09-28

  * ivar/future: provide "TCE", per-thread scheduling, and
  promise squashing
  * util-core: add bijection
  * util: Time.now is now measured at nanosecond granularity
    instead of millisecond.
  * futurepool: don't attempt to perform work for Futures
  that are cancelled

1.11.2  2011-08-12

  * offer: use Int.compare instead of subtraction to avoid
  integer overflow in ObjectOrder
  * offer: accept an empty offer list.  this is just Offer.never
  * Eval: persistent compilation targets

1.11.1  2011-08-05

  * offer/broker: fixes, simplifications - gets rid of thunked
  values on sends.  removing the infrastructure required to
  support this led to significant simplification.  lock the
  correct objects for broker events.  don't try to resolve
  identical objects in lock order.
  * offer: java support
  * hashing: actually return 64bit values from the 64bit hash
  functions; tests

1.11.0  2011-08-02

  * Introduce new util-codec module to contain various codecs.
  Primarily so that it can depend on apache commons-codec 1.5
  for base64 improvements over the sun one.

1.10.4  2011-07-29

  * Added TestLogging specs helper to util-logging.
  * Spools: like scala streams, but with deferred tails.

1.10.3  2011-07-27

  * add GZip string encoder

1.10.2  2011-07-18

  * Maintain a map of already visited objects incase someone
  creates a circular of config objects.  
  * Make Duration hashable.  
  * Promise.on{Success, Failure}: returned chained future.

